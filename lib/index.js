// @bun
import*as path from"path/posix";function Context(request){const json=async(json2,status=200)=>{return new Response(JSON.stringify(json2),{status,headers:{"Content-Type":"application/json"}})};const pretty=async(json2,status=200)=>{return new Response(JSON.stringify(json2,null,2),{status,headers:{"Content-Type":"application/json"}})};const text=async(text2,status=200)=>{return new Response(text2,{status,headers:{"Content-Type":"text/plain"}})};const html=async(html2,status=200)=>{return new Response(html2,{status,headers:{"Content-Type":"text/html"}})};const error=async(message,status=500)=>{return json({error:message},status)};const success=async(message,status=200)=>{return json({message},status)};const redirect=async(url,status=302)=>{return new Response(null,{status,headers:{Location:url}})};const sendFile=async(filePath,status=200)=>{const file=Bun.file(filePath);let rawFileName=path.basename(filePath);rawFileName=rawFileName.replace(/ /g,"_");rawFileName=rawFileName.replace(/\\/g,"_");rawFileName=rawFileName.split("_")[rawFileName.split("_").length-1];return new Response(file,{headers:{"Content-Type":"application/octet-stream","Content-Disposition":`attachment; filename="${rawFileName}"`},status})};const query={get:(key)=>{return new URL(request.url).searchParams.get(key)}};const readHtml=async(filePath)=>{if(!filePath.endsWith(".html"))throw new Error("File must be an HTML file");const file=await Bun.file(filePath).text();return file};return{json,pretty,text,html,error,success,redirect,sendFile,readHtml,query,req:request}}class Router{request;routes=new Map;middlewares=[];constructor(request){this.request=request;this.routes.set("GET",[]);this.routes.set("POST",[]);this.routes.set("PUT",[]);this.routes.set("DELETE",[])}parsePathPattern(path2){const paramNames=[];const regexPattern=path2.replace(/:([a-zA-Z][a-zA-Z0-9]*)/g,(_,paramName)=>{paramNames.push(paramName);return"([^/]+)"});return{pattern:new RegExp(`^${regexPattern}$`),paramNames}}addRoute(method,path2,handler){const methodRoutes=this.routes.get(method);if(methodRoutes){const{pattern,paramNames}=this.parsePathPattern(path2);methodRoutes.push({pattern,paramNames,handler:(context)=>handler(context)})}}findRoute(method,path2){const methodRoutes=this.routes.get(method);if(!methodRoutes)return null;for(const route of methodRoutes){const match=path2.match(route.pattern);if(match){const params={};route.paramNames.forEach((name,index)=>{params[name]=match[index+1]});return{route,params}}}return null}use(middleware){this.middlewares.push(middleware);return this}async executeMiddlewareChain(index,request,finalHandler){if(index>=this.middlewares.length){return finalHandler()}const middleware=this.middlewares[index];return middleware(request,()=>this.executeMiddlewareChain(index+1,request,finalHandler))}get(path2,handler){this.addRoute("GET",path2,handler);return this}post(path2,handler){this.addRoute("POST",path2,handler);return this}put(path2,handler){this.addRoute("PUT",path2,handler);return this}delete(path2,handler){this.addRoute("DELETE",path2,handler);return this}async run(){const method=this.request.method;const url=new URL(this.request.url);const path2=url.pathname;const routeMatch=this.findRoute(method,path2);if(!routeMatch){return new Response("Not Found",{status:404})}try{const ctx=Context(this.request);const routeContext={...ctx,params:routeMatch.params};return await this.executeMiddlewareChain(0,this.request,()=>routeMatch.route.handler(routeContext))}catch(error){console.error("Router error:",error);return new Response("Internal Server Error",{status:500})}}}function createRouter(request){return new Router(request)}var router_default=createRouter;var defaultOptions={validate:async()=>true,exclude:[],onError:(error)=>new Response("Unauthorized",{status:401}),header:"Authorization",scheme:"Bearer"};function isPathExcluded(path2,excludeList){return excludeList.some((pattern)=>{if(pattern instanceof RegExp){return pattern.test(path2)}return path2===pattern})}function extractToken(header,scheme){if(!header)return null;const[authScheme,token]=header.split(" ");if(authScheme!==scheme||!token)return null;return token}function BearerAuth(options={}){const resolvedOptions={...defaultOptions,...options};return async(request,next)=>{const url=new URL(request.url);if(isPathExcluded(url.pathname,resolvedOptions.exclude)){return next()}try{const authHeader=request.headers.get(resolvedOptions.header);const token=extractToken(authHeader,resolvedOptions.scheme);if(!token){throw new Error("No token provided")}const isValid=await resolvedOptions.validate(token);if(!isValid){throw new Error("Invalid token")}return next()}catch(error){if(error instanceof Error){return resolvedOptions.onError(error)}return new Response("Unauthorized",{status:401})}}}var defaultOptions2={origin:"*",methods:["GET","HEAD","PUT","PATCH","POST","DELETE"],allowedHeaders:[],exposedHeaders:[],credentials:false,maxAge:86400,preflight:true};function isOriginAllowed(origin,allowedOrigin){if(typeof allowedOrigin==="string"){return allowedOrigin==="*"||origin===allowedOrigin}if(Array.isArray(allowedOrigin)){return allowedOrigin.includes(origin)}if(typeof allowedOrigin==="function"){return allowedOrigin(origin)}return false}function Cors(options={}){const resolvedOptions={...defaultOptions2,...options};return async(request,next)=>{const requestOrigin=request.headers.get("origin")||"";const responseHeaders=new Headers;if(isOriginAllowed(requestOrigin,resolvedOptions.origin)){responseHeaders.set("Access-Control-Allow-Origin",resolvedOptions.origin==="*"&&resolvedOptions.credentials?requestOrigin:typeof resolvedOptions.origin==="string"?resolvedOptions.origin:requestOrigin)}if(resolvedOptions.credentials){responseHeaders.set("Access-Control-Allow-Credentials","true")}if(resolvedOptions.preflight&&request.method==="OPTIONS"){responseHeaders.set("Access-Control-Allow-Methods",resolvedOptions.methods.join(", "));if(resolvedOptions.allowedHeaders.length){responseHeaders.set("Access-Control-Allow-Headers",resolvedOptions.allowedHeaders.join(", "))}else{const requestHeaders=request.headers.get("access-control-request-headers");if(requestHeaders){responseHeaders.set("Access-Control-Allow-Headers",requestHeaders)}}if(resolvedOptions.exposedHeaders.length){responseHeaders.set("Access-Control-Expose-Headers",resolvedOptions.exposedHeaders.join(", "))}if(resolvedOptions.maxAge){responseHeaders.set("Access-Control-Max-Age",resolvedOptions.maxAge.toString())}return new Response(null,{status:204,headers:responseHeaders})}const response=await next();const newResponse=new Response(response.body,response);responseHeaders.forEach((value,key)=>{newResponse.headers.set(key,value)});return newResponse}}var ANSI_BACKGROUND_OFFSET=10;var wrapAnsi16=(offset=0)=>(code)=>`\x1B[${code+offset}m`;var wrapAnsi256=(offset=0)=>(code)=>`\x1B[${38+offset};5;${code}m`;var wrapAnsi16m=(offset=0)=>(red,green,blue)=>`\x1B[${38+offset};2;${red};${green};${blue}m`;var styles={modifier:{reset:[0,0],bold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],overline:[53,55],inverse:[7,27],hidden:[8,28],strikethrough:[9,29]},color:{black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],blackBright:[90,39],gray:[90,39],grey:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39]},bgColor:{bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],bgBlackBright:[100,49],bgGray:[100,49],bgGrey:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]}};var modifierNames=Object.keys(styles.modifier);var foregroundColorNames=Object.keys(styles.color);var backgroundColorNames=Object.keys(styles.bgColor);var colorNames=[...foregroundColorNames,...backgroundColorNames];function assembleStyles(){const codes=new Map;for(const[groupName,group]of Object.entries(styles)){for(const[styleName,style]of Object.entries(group)){styles[styleName]={open:`\x1B[${style[0]}m`,close:`\x1B[${style[1]}m`};group[styleName]=styles[styleName];codes.set(style[0],style[1])}Object.defineProperty(styles,groupName,{value:group,enumerable:false})}Object.defineProperty(styles,"codes",{value:codes,enumerable:false});styles.color.close="\x1B[39m";styles.bgColor.close="\x1B[49m";styles.color.ansi=wrapAnsi16();styles.color.ansi256=wrapAnsi256();styles.color.ansi16m=wrapAnsi16m();styles.bgColor.ansi=wrapAnsi16(ANSI_BACKGROUND_OFFSET);styles.bgColor.ansi256=wrapAnsi256(ANSI_BACKGROUND_OFFSET);styles.bgColor.ansi16m=wrapAnsi16m(ANSI_BACKGROUND_OFFSET);Object.defineProperties(styles,{rgbToAnsi256:{value(red,green,blue){if(red===green&&green===blue){if(red<8){return 16}if(red>248){return 231}return Math.round((red-8)/247*24)+232}return 16+36*Math.round(red/255*5)+6*Math.round(green/255*5)+Math.round(blue/255*5)},enumerable:false},hexToRgb:{value(hex){const matches=/[a-f\d]{6}|[a-f\d]{3}/i.exec(hex.toString(16));if(!matches){return[0,0,0]}let[colorString]=matches;if(colorString.length===3){colorString=[...colorString].map((character)=>character+character).join("")}const integer=Number.parseInt(colorString,16);return[integer>>16&255,integer>>8&255,integer&255]},enumerable:false},hexToAnsi256:{value:(hex)=>styles.rgbToAnsi256(...styles.hexToRgb(hex)),enumerable:false},ansi256ToAnsi:{value(code){if(code<8){return 30+code}if(code<16){return 90+(code-8)}let red;let green;let blue;if(code>=232){red=((code-232)*10+8)/255;green=red;blue=red}else{code-=16;const remainder=code%36;red=Math.floor(code/36)/5;green=Math.floor(remainder/6)/5;blue=remainder%6/5}const value=Math.max(red,green,blue)*2;if(value===0){return 30}let result=30+(Math.round(blue)<<2|Math.round(green)<<1|Math.round(red));if(value===2){result+=60}return result},enumerable:false},rgbToAnsi:{value:(red,green,blue)=>styles.ansi256ToAnsi(styles.rgbToAnsi256(red,green,blue)),enumerable:false},hexToAnsi:{value:(hex)=>styles.ansi256ToAnsi(styles.hexToAnsi256(hex)),enumerable:false}});return styles}var ansiStyles=assembleStyles();var ansi_styles_default=ansiStyles;import process from"process";import os from"os";import tty from"tty";function hasFlag(flag,argv=globalThis.Deno?globalThis.Deno.args:process.argv){const prefix=flag.startsWith("-")?"":flag.length===1?"-":"--";const position=argv.indexOf(prefix+flag);const terminatorPosition=argv.indexOf("--");return position!==-1&&(terminatorPosition===-1||position<terminatorPosition)}var{env}=process;var flagForceColor;if(hasFlag("no-color")||hasFlag("no-colors")||hasFlag("color=false")||hasFlag("color=never")){flagForceColor=0}else if(hasFlag("color")||hasFlag("colors")||hasFlag("color=true")||hasFlag("color=always")){flagForceColor=1}function envForceColor(){if("FORCE_COLOR"in env){if(env.FORCE_COLOR==="true"){return 1}if(env.FORCE_COLOR==="false"){return 0}return env.FORCE_COLOR.length===0?1:Math.min(Number.parseInt(env.FORCE_COLOR,10),3)}}function translateLevel(level){if(level===0){return false}return{level,hasBasic:true,has256:level>=2,has16m:level>=3}}function _supportsColor(haveStream,{streamIsTTY,sniffFlags=true}={}){const noFlagForceColor=envForceColor();if(noFlagForceColor!==undefined){flagForceColor=noFlagForceColor}const forceColor=sniffFlags?flagForceColor:noFlagForceColor;if(forceColor===0){return 0}if(sniffFlags){if(hasFlag("color=16m")||hasFlag("color=full")||hasFlag("color=truecolor")){return 3}if(hasFlag("color=256")){return 2}}if("TF_BUILD"in env&&"AGENT_NAME"in env){return 1}if(haveStream&&!streamIsTTY&&forceColor===undefined){return 0}const min=forceColor||0;if(env.TERM==="dumb"){return min}if(process.platform==="win32"){const osRelease=os.release().split(".");if(Number(osRelease[0])>=10&&Number(osRelease[2])>=10586){return Number(osRelease[2])>=14931?3:2}return 1}if("CI"in env){if(["GITHUB_ACTIONS","GITEA_ACTIONS","CIRCLECI"].some((key)=>(key in env))){return 3}if(["TRAVIS","APPVEYOR","GITLAB_CI","BUILDKITE","DRONE"].some((sign)=>(sign in env))||env.CI_NAME==="codeship"){return 1}return min}if("TEAMCITY_VERSION"in env){return/^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(env.TEAMCITY_VERSION)?1:0}if(env.COLORTERM==="truecolor"){return 3}if(env.TERM==="xterm-kitty"){return 3}if("TERM_PROGRAM"in env){const version=Number.parseInt((env.TERM_PROGRAM_VERSION||"").split(".")[0],10);switch(env.TERM_PROGRAM){case"iTerm.app":{return version>=3?3:2}case"Apple_Terminal":{return 2}}}if(/-256(color)?$/i.test(env.TERM)){return 2}if(/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)){return 1}if("COLORTERM"in env){return 1}return min}function createSupportsColor(stream,options={}){const level=_supportsColor(stream,{streamIsTTY:stream&&stream.isTTY,...options});return translateLevel(level)}var supportsColor={stdout:createSupportsColor({isTTY:tty.isatty(1)}),stderr:createSupportsColor({isTTY:tty.isatty(2)})};var supports_color_default=supportsColor;function stringReplaceAll(string,substring,replacer){let index=string.indexOf(substring);if(index===-1){return string}const substringLength=substring.length;let endIndex=0;let returnValue="";do{returnValue+=string.slice(endIndex,index)+substring+replacer;endIndex=index+substringLength;index=string.indexOf(substring,endIndex)}while(index!==-1);returnValue+=string.slice(endIndex);return returnValue}function stringEncaseCRLFWithFirstIndex(string,prefix,postfix,index){let endIndex=0;let returnValue="";do{const gotCR=string[index-1]==="\r";returnValue+=string.slice(endIndex,gotCR?index-1:index)+prefix+(gotCR?`\r
`:`
`)+postfix;endIndex=index+1;index=string.indexOf(`
`,endIndex)}while(index!==-1);returnValue+=string.slice(endIndex);return returnValue}var{stdout:stdoutColor,stderr:stderrColor}=supports_color_default;var GENERATOR=Symbol("GENERATOR");var STYLER=Symbol("STYLER");var IS_EMPTY=Symbol("IS_EMPTY");var levelMapping=["ansi","ansi","ansi256","ansi16m"];var styles2=Object.create(null);var applyOptions=(object,options={})=>{if(options.level&&!(Number.isInteger(options.level)&&options.level>=0&&options.level<=3)){throw new Error("The `level` option should be an integer from 0 to 3")}const colorLevel=stdoutColor?stdoutColor.level:0;object.level=options.level===undefined?colorLevel:options.level};var chalkFactory=(options)=>{const chalk=(...strings)=>strings.join(" ");applyOptions(chalk,options);Object.setPrototypeOf(chalk,createChalk.prototype);return chalk};function createChalk(options){return chalkFactory(options)}Object.setPrototypeOf(createChalk.prototype,Function.prototype);for(const[styleName,style]of Object.entries(ansi_styles_default)){styles2[styleName]={get(){const builder=createBuilder(this,createStyler(style.open,style.close,this[STYLER]),this[IS_EMPTY]);Object.defineProperty(this,styleName,{value:builder});return builder}}}styles2.visible={get(){const builder=createBuilder(this,this[STYLER],true);Object.defineProperty(this,"visible",{value:builder});return builder}};var getModelAnsi=(model,level,type,...arguments_)=>{if(model==="rgb"){if(level==="ansi16m"){return ansi_styles_default[type].ansi16m(...arguments_)}if(level==="ansi256"){return ansi_styles_default[type].ansi256(ansi_styles_default.rgbToAnsi256(...arguments_))}return ansi_styles_default[type].ansi(ansi_styles_default.rgbToAnsi(...arguments_))}if(model==="hex"){return getModelAnsi("rgb",level,type,...ansi_styles_default.hexToRgb(...arguments_))}return ansi_styles_default[type][model](...arguments_)};var usedModels=["rgb","hex","ansi256"];for(const model of usedModels){styles2[model]={get(){const{level}=this;return function(...arguments_){const styler=createStyler(getModelAnsi(model,levelMapping[level],"color",...arguments_),ansi_styles_default.color.close,this[STYLER]);return createBuilder(this,styler,this[IS_EMPTY])}}};const bgModel="bg"+model[0].toUpperCase()+model.slice(1);styles2[bgModel]={get(){const{level}=this;return function(...arguments_){const styler=createStyler(getModelAnsi(model,levelMapping[level],"bgColor",...arguments_),ansi_styles_default.bgColor.close,this[STYLER]);return createBuilder(this,styler,this[IS_EMPTY])}}}}var proto=Object.defineProperties(()=>{},{...styles2,level:{enumerable:true,get(){return this[GENERATOR].level},set(level){this[GENERATOR].level=level}}});var createStyler=(open,close,parent)=>{let openAll;let closeAll;if(parent===undefined){openAll=open;closeAll=close}else{openAll=parent.openAll+open;closeAll=close+parent.closeAll}return{open,close,openAll,closeAll,parent}};var createBuilder=(self,_styler,_isEmpty)=>{const builder=(...arguments_)=>applyStyle(builder,arguments_.length===1?""+arguments_[0]:arguments_.join(" "));Object.setPrototypeOf(builder,proto);builder[GENERATOR]=self;builder[STYLER]=_styler;builder[IS_EMPTY]=_isEmpty;return builder};var applyStyle=(self,string)=>{if(self.level<=0||!string){return self[IS_EMPTY]?"":string}let styler=self[STYLER];if(styler===undefined){return string}const{openAll,closeAll}=styler;if(string.includes("\x1B")){while(styler!==undefined){string=stringReplaceAll(string,styler.close,styler.open);styler=styler.parent}}const lfIndex=string.indexOf(`
`);if(lfIndex!==-1){string=stringEncaseCRLFWithFirstIndex(string,closeAll,openAll,lfIndex)}return openAll+string+closeAll};Object.defineProperties(createChalk.prototype,styles2);var chalk=createChalk();var chalkStderr=createChalk({level:stderrColor?stderrColor.level:0});var source_default=chalk;function formatStatusCode(status){if(status>=500){return source_default.red(status)}else if(status>=400){return source_default.yellow(status)}else if(status>=300){return source_default.cyan(status)}else if(status>=200){return source_default.green(status)}return source_default.gray(status)}function formatMethod(method){switch(method.toUpperCase()){case"GET":return source_default.blue(method);case"POST":return source_default.green(method);case"PUT":return source_default.yellow(method);case"DELETE":return source_default.red(method);case"PATCH":return source_default.magenta(method);default:return source_default.gray(method)}}function formatTimestamp(){const now=new Date;return source_default.gray(`[${now.toLocaleDateString()} ${now.toLocaleTimeString()}]`)}function formatDuration(duration){if(duration>1000){return source_default.red(`${(duration/1000).toFixed(2)}s`)}else if(duration>100){return source_default.yellow(`${duration.toFixed(2)}ms`)}return source_default.green(`${duration.toFixed(2)}ms`)}function formatPath(path2){return source_default.white(path2)}function Logger(options={}){const{enabled=true,showTimestamp=true,showDuration=true}=options;return async(request,next)=>{if(!enabled)return next();const url=new URL(request.url);const startTime=performance.now();const requestLog=[showTimestamp?formatTimestamp():null,"\u2192",formatMethod(request.method),formatPath(url.pathname)].filter(Boolean).join(" ");console.log(requestLog);try{const response=await next();const duration=performance.now()-startTime;const responseLog=[showTimestamp?formatTimestamp():null,"\u2190",formatMethod(request.method),formatPath(url.pathname),formatStatusCode(response.status),showDuration?formatDuration(duration):null].filter(Boolean).join(" ");console.log(responseLog);return response}catch(error){const duration=performance.now()-startTime;const errorLog=[showTimestamp?formatTimestamp():null,"\u2A2F",formatMethod(request.method),formatPath(url.pathname),source_default.red("ERROR"),showDuration?formatDuration(duration):null].filter(Boolean).join(" ");console.error(errorLog);console.error(source_default.red(error));throw error}}}import{join}from"path";import{statSync,readdirSync}from"fs";var defaultMimeTypes={html:"text/html",css:"text/css",js:"text/javascript",txt:"text/plain",xml:"text/xml",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif",svg:"image/svg+xml",ico:"image/x-icon",woff:"font/woff",woff2:"font/woff2",ttf:"font/ttf",otf:"font/otf",json:"application/json",pdf:"application/pdf",zip:"application/zip"};var defaultOptions3={dir:"public",prefix:"",index:"index.html",mimeTypes:{},listing:false,spa:false};function getMimeType(filename,customMimeTypes){const ext=filename.split(".").pop()?.toLowerCase()||"";return customMimeTypes[ext]||defaultMimeTypes[ext]||"application/octet-stream"}function generateDirectoryListing(path2,files){const html=`
    <!DOCTYPE html>
    <html>
      <head>
        <title>Directory: ${path2}</title>
        <style>
          body { font-family: system-ui; max-width: 800px; margin: 0 auto; padding: 2rem; }
          .list { list-style: none; padding: 0; }
          .list li { padding: 0.5rem 0; border-bottom: 1px solid #eee; }
          .list a { color: #2563eb; text-decoration: none; }
          .list a:hover { text-decoration: underline; }
        </style>
      </head>
      <body>
        <h1>Directory: ${path2}</h1>
        <ul class="list">
          ${path2!=="/"?'<li><a href="../">../</a></li>':""}
          ${files.map((file)=>`<li><a href="./${file}">${file}${file.includes(".")?"":"/"}</a></li>`).join(`
`)}
        </ul>
      </body>
    </html>
  `;return html}function Static(options={}){const resolvedOptions={...defaultOptions3,...options,mimeTypes:{...defaultMimeTypes,...options.mimeTypes}};return async(request,next)=>{const url=new URL(request.url);let path2=decodeURIComponent(url.pathname);if(resolvedOptions.prefix){if(!path2.startsWith(resolvedOptions.prefix)){return next()}path2=path2.slice(resolvedOptions.prefix.length)}path2=path2.replace(/^\/+/,"");const fullPath=join(resolvedOptions.dir,path2);try{const stats=statSync(fullPath);if(stats.isDirectory()){const indexPath=join(fullPath,resolvedOptions.index);try{const indexStats=statSync(indexPath);if(indexStats.isFile()){const file=Bun.file(indexPath);return new Response(file,{headers:{"Content-Type":getMimeType(resolvedOptions.index,resolvedOptions.mimeTypes)}})}}catch(e){}if(resolvedOptions.listing){const files=readdirSync(fullPath);const listing=generateDirectoryListing(path2,files);return new Response(listing,{headers:{"Content-Type":"text/html"}})}return next()}if(stats.isFile()){const file=Bun.file(fullPath);return new Response(file,{headers:{"Content-Type":getMimeType(fullPath,resolvedOptions.mimeTypes)}})}return next()}catch(error){if(resolvedOptions.spa){try{const indexPath=join(resolvedOptions.dir,resolvedOptions.index);const file=Bun.file(indexPath);return new Response(file,{headers:{"Content-Type":getMimeType(resolvedOptions.index,resolvedOptions.mimeTypes)}})}catch(e){return next()}}return next()}}}export{Static,router_default as Router,Logger,Cors,BearerAuth};
